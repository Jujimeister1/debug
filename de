Interacting with wires
spartans@raspberrypi:~/Documents/csc102-defuse $ git pull
remote: Enumerating objects: 6, done.
remote: Counting objects: 100% (6/6), done.
remote: Total 6 (delta 5), reused 6 (delta 5), pack-reused 0 (from 0)
Unpacking objects: 100% (6/6), 779 bytes | 86.00 KiB/s, done.
From https://github.com/Albiorin/csc102-defuse
   8f6bc80..2bbafa4  test2      -> origin/test2
Updating 8f6bc80..2bbafa4
Fast-forward
 bomb/code/Duck_GUI_V2.py | 23 ++++++++---------------
 bomb/code/bomb.py        |  4 ++--
 2 files changed, 10 insertions(+), 17 deletions(-)
spartans@raspberrypi:~/Documents/csc102-defuse $ /bin/python /home/spartans/Documents/csc102-defuse/bomb/code/bomb.py
pygame 2.1.2 (SDL 2.26.5, Python 3.11.2)
Hello from the pygame community. https://www.pygame.org/contribute.html
Running On Raspberry Pi
7-Segment Pins
Keypad Pins
Jumper Wires Pins
Button RGB Pins
Toggle Switches Pins
Serial Number: ADB2362U
Toggles Target: 1101/13
Wires Target: 11010/26
Keypad Target: 53283/LEAVE/SYSTEM/KQKLWE (Rot=18)
Button Target: 2 (B)
Interacting with toggles
Exception in Tkinter callback
Traceback (most recent call last):
  File "/usr/lib/python3.11/tkinter/__init__.py", line 1948, in __call__
    return self.func(*args)
           ^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/tkinter/__init__.py", line 861, in callit
    func(*args)
  File "/home/spartans/Documents/csc102-defuse/bomb/code/Duck_GUI_V2.py", line 333, in _monitor
    self._handle_arrow(arrow)
  File "/home/spartans/Documents/csc102-defuse/bomb/code/Duck_GUI_V2.py", line 338, in _handle_arrow
    expected = self.sequence[self.step]
               ~~~~~~~~~~~~~^^^^^^^^^^^
IndexError: list index out of range
Interacting with wires
^CTraceback (most recent call last):
  File "/home/spartans/Documents/csc102-defuse/bomb/code/bomb.py", line 330, in <module>
    window.mainloop()
  File "/usr/lib/python3.11/tkinter/__init__.py", line 1485, in mainloop
    self.tk.mainloop(n)
  File "/usr/lib/python3.11/tkinter/__init__.py", line 1943, in __call__
    def __call__(self, *args):

